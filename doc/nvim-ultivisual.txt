*nvim-ultivisual*          The Ultimate visual mode plugin written by Lua Script

                     __  ______  _       _                  __
                    / / / / / /_(_)   __(_)______  ______ _/ /
                   / / / / / __/ / | / / / ___/ / / / __ `/ /
                  / /_/ / / /_/ /| |/ / (__  ) /_/ / /_/ / /
                  \____/_/\__/_/ |___/_/____/\__,_/\__,_/_/

================================================================================
Contents                                              *nvim-ultivisual-contents*

  Contents....................................... |nvim-ultivisual-contents|
  Introduction................................... |nvim-ultivisual-introduction|
  Setup.......................................... |nvim-ultivisual-setup|
  License........................................ |nvim-ultivisual-license|

================================================================================
Introduction                                      *nvim-ultivisual-introduction*

This plugin makes convenient to use visual mode for neovim editor.
The features are in below.

1. Ultimate indent making.
    - Make indent accurately.
    - Also noexpandtab supported.
    - You can repeat to make indent as long as you don't deselect the line!

2. Ultimate brackets making.
    - You can set the pair of brackets' shape whatever you want.
    - Optionally, you can set to ignore the indent of the start line.
    - Move the cursor to the end of the brackets.

3. Ultimate yank paste.
    - This feature makes that you can paste copied lines as you intended.
    - Move the cursor to the end of the pasted line.

================================================================================
Setup                                                    *nvim-ultivisual-setup*

To use nvim-ultivisual plugin, you have to call the setup function.
The code in below is the default options.

Example:
>
    -- Default options.
    require("nvim-ultivisual").setup({
      features = {
        indent = true,
        brackets = true,
        paste = true,
      },

      keymaps = {
        make_indent = {
          key = '<TAB>',
          modes = { 'v','n' },
        },

        delete_indent = {
          key = '<S-TAB>',
          modes = { 'v','n' },
        },

        brackets = {
          { key = '(', shapes = { '(',')' } },
          { key = '{', shapes = { '{','}' } },
        },

        paste = {
          key = '<C-V>',
          modes = { 'v','n','i' },
        },
      },

      options = {
        brackets = {
          ignore_indent = true,
        },
      },
    })
<

*nvim-ultivisual.features*
Enable or disable the plugin's features.

    *nvim-ultivisual.features.indent*
    Switch whether use ultivisual indent or not.
      Type: `boolean`, Default: `true`

    *nvim-ultivisual.features.brackets*
    Switch whether use ultivisual brackets or not.
      Type: `boolean`, Default: `true`

    *nvim-ultivisual.features.paste*
    Switch whether use ultivisual paste or not.
      Type: `boolean`, Default: `true`

*nvim-ultivisual.keymaps*
Map the keys and specific modes for ultivisual features.

    *nvim-ultivisual.keymaps.make_indent*
    Make indent accurately when you push what you mapped in specific modes.
    (only if |features.indent| is `true`)

    This process would make indent all the selected line as `shiftwidth` size.
>
    vim.opt.shiftwidth = 2
    or
    set shiftwidth=2
<
    - 1 space would be changed to 2 spaces!

>
    vim.opt.shiftwidth = 4
    or
    set shiftwidth 4
<
    - 1~3 space would be changed to 4 spaces!

        *nvim-ultivisual.keymaps.make_indent.key*
        Set the key for making indent feature.
          Type: `string`, Default: `'<TAB>'`

        *nvim-ultivisual.keymaps.make_indent.modes*
        Specify the modes for making indent feature.
          Type: `{string}`, Default: `{ 'v','n' }`

    *nvim-ultivisual.keymaps.delete_indent*
    Delete indent accurately when you push what you mapped in specific modes.
    (only if |features.indent| is `true`)

        *nvim-ultivisual.keymaps.delete_indent.key*
        Set the key for deleting indent feature.
          Type: `string`, Default: `'<S-TAB>'`

        *nvim-ultivisual.keymaps.delete_indent.modes*
        Specify the modes for deleting indent feature.
          Type: `{string}`, Default: `{ 'v','n' }`

    *nvim-ultivisual.keymaps.brackets*
    Make brackets accurately when you push what you mapped in specific modes.
    (only if |features.brackets| is `true`)
      Type: `table`, Default:
        `{`
          `{ key = '(', shapes = { '(',')' } },`
          `{ key = '{', shapes = { '{','}' } },`
        `}`
    - The table needs |key| which includes one arguments.
    - The table needs |shapes| which includes table set by two arguments.
    - You can set the brackets' shape whatever you want to use.

    *nvim-ultivisual.keymaps.paste*
    Paste accurately when you push what you mapped in specific modes.
    (only if |features.paste| is `true`)

        *nvim-ultivisual.keymaps.paste.key*
        Set the key for paste yanked line(s).
          Type: `string`, Default: `'<C-V>'`

        *nvim-ultivisual.keymaps.paste.modes*
        Specify the modes for paste yanked line(s).
          Type: `{string}`, Default: `{ 'v','n','i' }`

*nvim-ultivisual.options*
    *nvim-ultivisual.options.brackets.ignore_indent*
    Switch whether ignore all indents or not when you make brackets.
    (only if |features.brackets| is `true`)
      Type: `boolean`, Default: `true`


================================================================================
LICENSE                                                *nvim-ultivisual-license*
>
  MIT License

  Copyright (c) 2023 Aru

  Permission is hereby granted, free of charge, to any person obtaining a copy
  of this software and associated documentation files (the "Software"), to deal
  in the Software without restriction, including without limitation the rights
  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  copies of the Software, and to permit persons to whom the Software is
  furnished to do so, subject to the following conditions:

  The above copyright notice and this permission notice shall be included in all
  copies or substantial portions of the Software.

  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
  SOFTWARE.
<

================================================================================

vim:tw=78:ts=8:noet:ft=help:norl:
